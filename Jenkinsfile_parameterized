#!groovy
@Library("Infrastructure") _

properties([
  parameters([
    string(name: 'PRODUCT_NAME', defaultValue: 'ia', description: ''),
    string(name: 'APP', defaultValue: 'hearings-api', description: 'Immigration & Asylum hearings API'),
    string(name: 'TYPE', defaultValue: 'java', description: ''),
    string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be built and deployed'),
    choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod\nprod', description: 'Azure subscriptions available to build in')
  ]),
  [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-hearings-api.git'],
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

def secrets = [
  'ia-${env}': [

    secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
    secret('idam-secret', 'IA_IDAM_SECRET'),
    secret('s2s-secret', 'IA_S2S_SECRET'),
    secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
    secret('prof-ref-data-url', 'PROF_REF_DATA_URL'),
    secret('launch-darkly-sdk-key', 'LAUNCH_DARKLY_SDK_KEY'),
    secret('app-insights-connection-string', 'app-insights-connection-string'),
    secret('ia-config-validator-secret', 'IA_CONFIG_VALIDATOR_SECRET'),
    secret('app-insights-connection-string', 'app-insights-connection-string'),

    secret('test-caseofficer-username', 'TEST_CASEOFFICER_USERNAME'),
    secret('test-caseofficer-password', 'TEST_CASEOFFICER_PASSWORD'),
    secret('test-law-firm-a-username', 'TEST_LAW_FIRM_A_USERNAME'),
    secret('test-law-firm-a-password', 'TEST_LAW_FIRM_A_PASSWORD'),
    secret('test-adminofficer-username', 'TEST_ADMINOFFICER_USERNAME'),
    secret('test-adminofficer-password', 'TEST_ADMINOFFICER_PASSWORD'),

    secret('test-homeoffice-apc-username', 'TEST_HOMEOFFICE_APC_USERNAME'),
    secret('test-homeoffice-apc-password', 'TEST_HOMEOFFICE_APC_PASSWORD'),
    secret('test-homeoffice-lart-username', 'TEST_HOMEOFFICE_LART_USERNAME'),
    secret('test-homeoffice-lart-password', 'TEST_HOMEOFFICE_LART_PASSWORD'),
    secret('test-homeoffice-pou-username', 'TEST_HOMEOFFICE_POU_USERNAME'),
    secret('test-homeoffice-pou-password', 'TEST_HOMEOFFICE_POU_PASSWORD'),
    secret('test-homeoffice-generic-username', 'TEST_HOMEOFFICE_GENERIC_USERNAME'),
    secret('test-homeoffice-generic-password', 'TEST_HOMEOFFICE_GENERIC_PASSWORD'),
    secret('test-judge-x-username', 'TEST_JUDGE_X_USERNAME'),
    secret('test-judge-x-password', 'TEST_JUDGE_X_PASSWORD'),
    secret('test-citizen-username', 'TEST_CITIZEN_USERNAME'),
    secret('test-citizen-password', 'TEST_CITIZEN_PASSWORD'),

    secret('test-law-firm-share-case-a-username', 'TEST_LAW_FIRM_SHARE_CASE_A_USERNAME'),
    secret('test-law-firm-share-case-a-password', 'TEST_LAW_FIRM_SHARE_CASE_A_PASSWORD'),

    secret('test-law-firm-org-success-username', 'TEST_LAW_FIRM_ORG_SUCCESS_USERNAME'),
    secret('test-law-firm-org-success-password', 'TEST_LAW_FIRM_ORG_SUCCESS_PASSWORD'),

    secret('test-law-firm-org-deleted-username', 'TEST_LAW_FIRM_ORG_DELETED_USERNAME'),
    secret('test-law-firm-org-deleted-password', 'TEST_LAW_FIRM_ORG_DELETED_PASSWORD'),
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {

  env.IA_IDAM_REDIRECT_URI = "https://ia-hearings-api-aat.service.core-compute-aat.internal/oauth2/callback"
  env.CCD_URL = "http://ccd-data-store-api-aat.service.core-compute-aat.internal"
  env.CCD_GW_URL = "http://dm-store-aat.service.core-compute-aat.internal"
  env.DM_URL = "http://dm-store-aat.service.core-compute-aat.internal"
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.OPEN_ID_IDAM_URL = "https://idam-web-public.aat.platform.hmcts.net"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.HMC_API_URL = "http://hmc-cft-hearing-service-aat.service.core-compute-aat.internal"

  loadVaultSecrets(secrets)

  afterAlways('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  afterAlways('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }
}
