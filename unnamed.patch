Index: src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/ccd/Event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/ccd/Event.java b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/ccd/Event.java
--- a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/ccd/Event.java	(revision Staged)
+++ b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/ccd/Event.java	(date 1696522346101)
@@ -7,6 +7,7 @@
 
     LIST_CASE("listCase"),
     UPDATE_HEARING_REQUEST("updateHearingRequest"),
+    END_APPEAL("endAppeal"),
 
     @JsonEnumDefaultValue
     UNKNOWN("unknown");
Index: src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/AsylumCaseFieldDefinition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/AsylumCaseFieldDefinition.java b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/AsylumCaseFieldDefinition.java
--- a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/AsylumCaseFieldDefinition.java	(revision Staged)
+++ b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/entities/AsylumCaseFieldDefinition.java	(date 1696602298264)
@@ -166,6 +166,10 @@
         "chooseADateRangeEarliest", new TypeReference<String>(){}),
     CHOOSE_A_DATE_RANGE_LATEST(
         "chooseADateRangeLatest", new TypeReference<String>(){}),
+    END_APPEAL_OUTCOME(
+        "endAppealOutcome", new TypeReference<String>(){}),
+    REQUIRE_MANUAL_HEARINGS_CANCELLATION(
+        "requireManualHearingsCancellation", new TypeReference<String>(){}),
     ;
 
     private final String value;
Index: src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/handlers/presubmit/EndAppealRequestSubmit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/handlers/presubmit/EndAppealRequestSubmit.java b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/handlers/presubmit/EndAppealRequestSubmit.java
--- a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/handlers/presubmit/EndAppealRequestSubmit.java	(revision Staged)
+++ b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/handlers/presubmit/EndAppealRequestSubmit.java	(date 1696602298256)
@@ -1,0 +1,119 @@
+package uk.gov.hmcts.reform.iahearingsapi.domain.handlers.presubmit;
+
+import java.util.Arrays;
+import java.util.List;
+import java.util.Objects;
+import java.util.Optional;
+import static java.util.Objects.requireNonNull;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.AsylumCaseFieldDefinition.END_APPEAL_OUTCOME;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.AsylumCaseFieldDefinition.HEARINGS_REQUIRE_MANUAL_CANCELLATION;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.AsylumCaseFieldDefinition.REQUIRE_MANUAL_HEARINGS_CANCELLATION;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.ccd.field.YesOrNo.YES;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.HmcStatus.AWAITING_LISTING;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.HmcStatus.LISTED;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.HmcStatus.UPDATE_REQUESTED;
+import static uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.HmcStatus.UPDATE_SUBMITTED;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.http.HttpStatus;
+import org.springframework.stereotype.Component;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.AsylumCase;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.ccd.Event;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.ccd.callback.Callback;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.ccd.callback.PreSubmitCallbackResponse;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.ccd.callback.PreSubmitCallbackStage;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.ccd.field.YesOrNo;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.CaseHearing;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.HearingsGetResponse;
+import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.HmcStatus;
+import uk.gov.hmcts.reform.iahearingsapi.domain.handlers.PreSubmitCallbackHandler;
+import uk.gov.hmcts.reform.iahearingsapi.domain.service.HearingService;
+
+@Component
+@Slf4j
+public class EndAppealRequestSubmit implements PreSubmitCallbackHandler<AsylumCase> {
+
+    public static final String WITHDRAWN = "Withdrawn";
+    public static final String ABANDONED = "Abandoned";
+    HearingService hearingService;
+
+
+    public EndAppealRequestSubmit(
+        HearingService hearingService
+    ) {
+        this.hearingService = hearingService;
+    }
+
+    @Override
+    public boolean canHandle(PreSubmitCallbackStage callbackStage, Callback<AsylumCase> callback) {
+
+        requireNonNull(callbackStage, "callbackStage must not be null");
+        requireNonNull(callback, "callback must not be null");
+
+        return callbackStage == PreSubmitCallbackStage.ABOUT_TO_SUBMIT && Objects.equals(
+            Event.END_APPEAL,
+            callback.getEvent()
+        );
+    }
+
+    /**
+     * When appeal is ended, delete hearings on the case with certain statuses.
+     * We are calling HMC API to delete hearings, if any of the calls is unsuccessful then will set a CCD field to
+     * indicate manual hearings cancellation is required.
+     */
+    @Override
+    public PreSubmitCallbackResponse<AsylumCase> handle(
+        PreSubmitCallbackStage callbackStage,
+        Callback<AsylumCase> callback) {
+        if (!canHandle(callbackStage, callback)) {
+            throw new IllegalStateException("Cannot handle callback");
+        }
+
+        AsylumCase asylumCase = callback.getCaseDetails().getCaseData();
+
+        Optional<String> endAppealOutcome = asylumCase.read(END_APPEAL_OUTCOME);
+        String cancellationReason = mapToRefData(endAppealOutcome);
+
+        HearingsGetResponse hearings = hearingService.getHearings(callback.getCaseDetails().getId());
+        hearings.getCaseHearings()
+            .stream()
+            .filter(hearing -> canBeCanceled(hearing))
+            .forEach(
+                hearing -> {
+                    HttpStatus responseCode =
+                        hearingService
+                            .deleteHearing(Long.valueOf(hearing.getHearingRequestId()), cancellationReason)
+                            .getStatusCode();
+
+                    if (!responseCode.equals(HttpStatus.OK.value())) {
+                        asylumCase.write(REQUIRE_MANUAL_HEARINGS_CANCELLATION, YES);
+                    }
+                });
+
+        return new PreSubmitCallbackResponse<>(asylumCase);
+    }
+
+    private static boolean canBeCanceled(CaseHearing hearing) {
+        return List.of(AWAITING_LISTING, UPDATE_REQUESTED, UPDATE_SUBMITTED, LISTED)
+            .stream()
+            .anyMatch(status -> hearing.getHmcStatus().equals(status));
+    }
+
+    private static String mapToRefData(Optional<String> endAppealOutcome) {
+        String cancellationReason = null;
+
+        if (endAppealOutcome.isPresent()) {
+            switch (endAppealOutcome.get()) {
+                case WITHDRAWN -> {
+                    cancellationReason = "withdraw";
+                }
+                case ABANDONED -> {
+                    cancellationReason = "abandoned";
+                }
+                default -> {
+                    cancellationReason = "n/a";
+                }
+            }
+        }
+        return cancellationReason;
+    }
+}
\ No newline at end of file
Index: src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/service/HearingService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/service/HearingService.java b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/service/HearingService.java
--- a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/service/HearingService.java	(revision Staged)
+++ b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/domain/service/HearingService.java	(date 1696593258626)
@@ -6,11 +6,13 @@
 
 import java.time.LocalDateTime;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import javax.validation.constraints.NotNull;
 
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
 import uk.gov.hmcts.reform.authorisation.generators.AuthTokenGenerator;
 import uk.gov.hmcts.reform.iahearingsapi.domain.entities.AsylumCase;
@@ -22,6 +24,7 @@
 import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.response.PartiesNotifiedResponses;
 import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.response.UpdateHearingRequest;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.HmcHearingApi;
+import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.model.hmc.DeleteHearingRequest;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.model.hmc.HmcHearingRequestPayload;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.model.hmc.HmcHearingResponse;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.exception.HmcException;
@@ -166,4 +169,23 @@
         }
     }
 
+
+    public ResponseEntity<HmcHearingResponse> deleteHearing(Long hearingId, String cancellationReason) {
+        log.debug("Requesting Get Parties Notified with Hearing ID {}", hearingId);
+        try {
+            String serviceUserToken = idamService.getServiceUserToken();
+            String serviceAuthToken = serviceAuthTokenGenerator.generate();
+
+            return hmcHearingApi.deleteHearing(
+                serviceUserToken,
+                serviceAuthToken,
+                hearingId,
+                new DeleteHearingRequest(Arrays.asList(cancellationReason))
+            );
+        } catch (FeignException e) {
+            log.error("Failed to retrieve patries notified with Id: {} from HMC", hearingId);
+            throw new HmcException(e);
+        }
+    }
+
 }
Index: src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/model/hmc/DeleteHearingRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/model/hmc/DeleteHearingRequest.java b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/model/hmc/DeleteHearingRequest.java
--- a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/model/hmc/DeleteHearingRequest.java	(revision Staged)
+++ b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/model/hmc/DeleteHearingRequest.java	(date 1696588414127)
@@ -4,13 +4,15 @@
 import javax.validation.constraints.Size;
 import java.util.List;
 import com.fasterxml.jackson.annotation.JsonInclude;
+import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
 @Data
 @NoArgsConstructor
+@AllArgsConstructor
 @JsonInclude(JsonInclude.Include.NON_NULL)
-public class HmcDeleteHearingRequest {
+public class DeleteHearingRequest {
 
     @NotEmpty(message = "Cancellation Reason code details are not present")
     private List<@Size(min = 1, max = 100, message = "Cancellation Reason code "
Index: src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/HmcHearingApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/HmcHearingApi.java b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/HmcHearingApi.java
--- a/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/HmcHearingApi.java	(revision Staged)
+++ b/src/main/java/uk/gov/hmcts/reform/iahearingsapi/infrastructure/clients/HmcHearingApi.java	(date 1696593258621)
@@ -1,11 +1,15 @@
 package uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients;
 
+import javax.validation.Valid;
 import static org.springframework.http.HttpHeaders.AUTHORIZATION;
+import static org.springframework.util.MimeTypeUtils.APPLICATION_JSON_VALUE;
 
 import java.time.LocalDateTime;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.format.annotation.DateTimeFormat;
 import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
@@ -18,6 +22,7 @@
 import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.response.PartiesNotified;
 import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.response.PartiesNotifiedResponses;
 import uk.gov.hmcts.reform.iahearingsapi.domain.entities.hmc.response.UpdateHearingRequest;
+import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.model.hmc.DeleteHearingRequest;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.model.hmc.HmcHearingRequestPayload;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.clients.model.hmc.HmcHearingResponse;
 import uk.gov.hmcts.reform.iahearingsapi.infrastructure.config.DisableHystrixFeignConfiguration;
@@ -84,4 +89,11 @@
         LocalDateTime receivedDateTime
     );
 
+    @DeleteMapping(path = "/hearing/{id}", consumes = APPLICATION_JSON_VALUE, produces = APPLICATION_JSON_VALUE)
+    ResponseEntity<HmcHearingResponse> deleteHearing(
+        @RequestHeader(AUTHORIZATION) String authorisation,
+        @RequestHeader(SERVICE_AUTHORIZATION) String serviceAuthorization,
+        @PathVariable("id") Long hearingId,
+        @RequestBody @Valid DeleteHearingRequest deleteRequest
+    );
 }
